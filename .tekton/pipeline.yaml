apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  creationTimestamp: '2024-12-01T02:42:20Z'
  generation: 8
  managedFields:
    - apiVersion: tekton.dev/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:finally': {}
          'f:params': {}
          'f:tasks': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2024-12-04T21:32:42Z'
  name: cd-pipeline
  namespace: ctfoci-dev
  resourceVersion: '2795912375'
  uid: f855ae9e-69d3-42ef-99bd-b58da7b3ab82
spec:
  params:
    - description: The URL to the git repo
      name: GIT_REPO
      type: string
    - default: master
      description: The reference (branch or ref)
      name: GIT_REF
      type: string
    - default: inventory
      description: Name of the application
      name: APP_NAME
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME):latest'
      description: The name of the image to build
      name: IMAGE_NAME
      type: string
  tasks:
    - name: cleanup-task
      taskSpec:
        metadata: {}
        spec: null
        steps:
          - args:
              - |-
                echo "Deleting completed resources..."
                oc delete pods --field-selector=status.phase==Succeeded
                oc delete pods --field-selector=status.phase==Failed
            command:
              - /bin/bash
              - '-c'
            computeResources: {}
            image: 'quay.io/openshift/origin-cli:latest'
            name: cleanup
            workingDir: /workspace/source
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REF)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:dd5c8d08d52e304a542921634ebe6b5ff3d63c5f68f6d644e88417859b173ec8'
        - name: userHome
          value: /home/git
      runAfter:
        - cleanup-task
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: pylint
      params:
        - name: image
          value: 'docker.io/python:3.11-slim'
        - name: path
          value: service
        - name: args
          value: []
        - name: requirements-file
          value: requirements.txt
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pylint
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: testing
      params:
        - name: pytest-args
          value: []
        - name: secret-name
          value: postgres-creds
        - name: secret-key
          value: database_uri
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pytest-env
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: buildah
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: BUILDER_IMAGE
          value: 'registry.redhat.io/rhel8/buildah@sha256:5c7cd7c9a3d49e8905fc98693f6da605aeafae36bde5622dc78e12f31db3cd59'
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - pylint
        - testing
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: deploy-image
      params:
        - name: image-name
          value: $(params.IMAGE_NAME)
        - name: manifest-dir
          value: k8s
      runAfter:
        - buildah
      taskRef:
        kind: Task
        name: deploy-image
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: behave
      params:
        - name: base-url
          value: 'https://inventory-ctfoci-dev.apps.sandbox-m4.g2pi.p1.openshiftapps.com'
        - name: wait-seconds
          value: '60'
        - name: driver
          value: chrome
      runAfter:
        - deploy-image
      taskRef:
        kind: Task
        name: behave
      workspaces:
        - name: source
          workspace: pipeline-workspace
  workspaces:
    - name: pipeline-workspace
